/*
   Copyright 2011-2012 StormMQ Limited

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 */

#ifndef LIBAMQP_MEMORY_POOL_INTERNAL_H
#define LIBAMQP_MEMORY_POOL_INTERNAL_H

#include "Memory/Pool.h"

#ifdef __cplusplus
extern "C" {
#endif

#define SIZE_T_BYTES (sizeof(size_t))
#define LONG_DOUBLE_BYTES (sizeof(long double))
#define MIN_FRAGMENTS ((LONG_DOUBLE_BYTES - 1) / SIZE_T_BYTES + 1)

static const unsigned int leading_mask = 0x1d32a441U;      // generated by random.org
static const unsigned long long trailing_mask = 0x53d0cabf1d2d6c40ULL;     // generated by random.org

typedef struct amqp_memory_allocation_header_t
{
    amqp_memory_block_t *block;
    uint32_t index;
    uint32_t leading_guard;
} amqp_memory_allocation_header_t;

typedef struct amqp_memory_allocation_t
{
    amqp_memory_allocation_header_t header;
    union {
        long double alignment_insurance;
        size_t fragments[MIN_FRAGMENTS];
    } data;
} amqp_memory_allocation_t;

typedef struct amqp_memory_block_header_t
{
    amqp_memory_block_t *next;
    amqp_memory_block_t *previous;
    union
    {
        unsigned long bits;
        unsigned char bytes[LONG_BIT/8];
    } mask;
} amqp_memory_block_header_t;

struct amqp_memory_block_t
{
    amqp_memory_block_header_t header;
    union {
        long double alignment_insurance;
        unsigned char allocations[1];       /* amqp_memory_allocation_t data[LONG_BIT] */
    } data;
};

#ifdef __cplusplus
}
#endif
#endif
