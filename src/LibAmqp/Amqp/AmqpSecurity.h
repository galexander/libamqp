/*
   Copyright 2011-2012 StormMQ Limited

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 */
 
/*
  WARNING: This file was generated by scripts/generate. DO NOT HAND EDIT.
     scripts/generate uses:
  	scripts/generate-amqp-types.rb to generate AMQP typedefs
  	scripts/generate-frame-decode-methods.rb to generate frame decode methods
  	scripts/generate-type-decode-methods.rb to generate messaging type decode methods
 */
#ifndef LIBAMQP_AMQP_AMQP_SECURITY_H
#define LIBAMQP_AMQP_AMQP_SECURITY_H
#ifdef __cplusplus
extern "C" {
#endif

#include "AmqpTypes/AmqpTypes.h"
    
typedef struct amqp_security_sasl_mechanisms_t amqp_security_sasl_mechanisms_t;
typedef struct amqp_security_sasl_init_t amqp_security_sasl_init_t;
typedef struct amqp_security_sasl_challenge_t amqp_security_sasl_challenge_t;
typedef struct amqp_security_sasl_response_t amqp_security_sasl_response_t;
typedef struct amqp_security_sasl_outcome_t amqp_security_sasl_outcome_t;
    
/*
    <type name='sasl-mechanisms' provides='sasl-frame' class='composite' source='list'>
      <descriptor name='amqp:sasl-mechanisms:list' code='0x00000000:0x00000040'/>
      <field name='sasl-server-mechanisms' mandatory='true' type='symbol' multiple='true'/>
    </type>
*/
struct amqp_security_sasl_mechanisms_t {
    // 1 fields
    amqp_multiple_symbol_t sasl_server_mechanisms; /* mandatory; */
};
    
/*
    <type name='sasl-init' provides='sasl-frame' class='composite' source='list'>
      <descriptor name='amqp:sasl-init:list' code='0x00000000:0x00000041'/>
      <field name='mechanism' mandatory='true' type='symbol'/>
      <field name='initial-response' type='binary'/>
      <field name='hostname' type='string'/>
    </type>
*/
struct amqp_security_sasl_init_t {
    // 3 fields
    amqp_symbol_t mechanism; /* mandatory; */
    amqp_binary_t initial_response; 
    amqp_string_t hostname; 
};
    
/*
    <type name='sasl-challenge' provides='sasl-frame' class='composite' source='list'>
      <descriptor name='amqp:sasl-challenge:list' code='0x00000000:0x00000042'/>
      <field name='challenge' mandatory='true' type='binary'/>
    </type>
*/
struct amqp_security_sasl_challenge_t {
    // 1 fields
    amqp_binary_t challenge; /* mandatory; */
};
    
/*
    <type name='sasl-response' provides='sasl-frame' class='composite' source='list'>
      <descriptor name='amqp:sasl-response:list' code='0x00000000:0x00000043'/>
      <field name='response' mandatory='true' type='binary'/>
    </type>
*/
struct amqp_security_sasl_response_t {
    // 1 fields
    amqp_binary_t response; /* mandatory; */
};
    
/*
    <type name='sasl-outcome' provides='sasl-frame' class='composite' source='list'>
      <descriptor name='amqp:sasl-outcome:list' code='0x00000000:0x00000044'/>
      <field name='code' mandatory='true' type='sasl-code'/>
      <field name='additional-data' type='binary'/>
    </type>
*/
struct amqp_security_sasl_outcome_t {
    // 2 fields
    int code_is_null;
    amqp_sasl_code_t code; /* mandatory; */
    amqp_binary_t additional_data; 
};
#ifdef __cplusplus
}
#endif
#endif
